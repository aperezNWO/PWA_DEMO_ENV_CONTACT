/////////////////////////////////////////////
// STRATEGY
/////////////////////////////////////////////

/////////////////////////////////////////////
// GENERAL
/////////////////////////////////////////////

-- [_] MAIN MENU.
-- [_] http interceptor.
-- [_] codespaces.

/////////////////////////////////////////////
// HANOI TOWER
/////////////////////////////////////////////

-- [_] MAIN MENU.
-- [_] .
-- [_] .

/////////////////////////////////////////////
// SUDOKU
/////////////////////////////////////////////

-- [x] MAIN MENU.
-- [x] BOARD STYLE.
-- [x] DOWNLOAD TEMPLATE.
-- [>] File Upload
    -- [>] Backend : 
            -- [>] 'https://webapiangulardemo.somee.com/';
            -- [>] `${this.prefix}demos/_ZipDemoGetFileName`;
    -- [>] Frontend : 
            -- [>] FileGenerationZip.
            -- [>] <input type="file" (change)="selectFile($event)"/>.
/*
  selectedFiles?         : FileList;
  currentFile?           : File;

  selectFile(event: any): void {
    this.selectedFiles = event.target.files;
  }

  //
  upload(): void {
    //  
    this.progress = 0;
    //
    this.message  = "...cargando...";
    //
    if (this.selectedFiles) {
      const file: File | null = this.selectedFiles.item(0);
      //
      if (file) {
        //
        this.currentFile = file;
        //
        this.mcsdService.upload(this.currentFile).subscribe({
          next: (event: any) => {
            if (event.type === HttpEventType.UploadProgress) 
            {
              //
              this.progress = Math.round(100 * event.loaded / event.total);
            } 
            else if (event instanceof HttpResponse) 
            {
              //
              console.log("RESPONSE : " + event.body);
              //
              this.message = event.body;
            }
          },
          error: (err: any) => {
            //
            console.log(err);
            //
            this.progress = 0;
            //  
            if (err.error && err.error.message) 
            {
              //
              this.message = err.error.message;
            } 
            else 
            {
              //
              this.message = 'Could not upload the file!';
            }
            //
            this.currentFile = undefined;
          }
        });
      }
      //
      this.selectedFiles = undefined;
    }
*/
/*
Sudoku input:

  {5, 3, 0, 0, 7, 0, 0, 0, 0},
  {6, 0, 0, 1, 9, 5, 0, 0, 0},
  {0, 9, 8, 0, 0, 0, 0, 6, 0},
  {8, 0, 0, 0, 6, 0, 0, 0, 3},
  {4, 0, 0, 8, 0, 3, 0, 0, 1},
  {7, 0, 0, 0, 2, 0, 0, 0, 6},
  {0, 6, 0, 0, 0, 0, 2, 8, 0},
  {0, 0, 0, 4, 1, 9, 0, 0, 5},
  {0, 0, 0, 0, 8, 0, 0, 7, 9}

Sudoku solved:

  5 3 4 6 7 8 9 1 2 
  6 7 2 1 9 5 3 4 8 
  1 9 8 3 4 2 5 6 7 
  8 5 9 7 6 1 4 2 3 
  4 2 6 8 5 3 7 9 1 
  7 1 3 9 2 4 8 5 6 
  9 6 1 5 3 7 2 8 4 
  2 8 7 4 1 9 6 3 5 
  3 4 5 2 8 6 1 7 9
*/

/////////////////////////////////////////////

1) show me an angular and node.js code to crreate an online tic tac toe app

2) ¿Can I make an angular and node.js applicatoin which taka a photograph and recognize letters and numbers?

3) ¿Can I make an angular, node.js and gemini ai applicatoin which taka a photograph and recognize letters and numbers?

https://chat.openai.com/share/f383e00f-3b68-45c8-ad3f-d5bd32b9933e

https://chat.openai.com/share/f383e00f-3b68-45c8-ad3f-d5bd32b9933e

/////////////////////////////////////////////


[EXPORT BARD ANSWERS TO GOOGLE DOCUMENTS]

/////////////////////////////////////////////
// PWA
/////////////////////////////////////////////

--[_] https://web.dev/learn/pwa/service-workers

--[_] https://angular.dev/ecosystem/service-workers

/////////////////////////////////////////////
-- [_] MISCELANEOUS.
/////////////////////////////////////////////

        --[_] Big Icons Nav.
        --[_] Plaground env -> source.
        --[_] CSV / XLS / ZIP Option.
        --[_] c# accord.
        --[_] Hanoid 3d.
        --[_] Angular.dev / Certification / Community.
        --[_] Bootstrap Mobile / Desktop.
        --[_] Angular Job Alert / Social.
        --[_] Direct Job offer / angular.
        --[_] Bootstrap Mobile / Desktop.
        --[_] ng generate enum.
        --[_] node.js gemini.
        --[_] PWA / ANGULAR.DEV / WEB.DEV / MDN / W3C.
        --[_] Select your language.
        --[_] Topics end point.
        --[_] Angular Job Alert / Social.
        --[_] Paypal link button.
        --[_] Git Hub readme / topic list.
        --[_] Uix load template dinamically.
        --[_] SCSS.
        --[_] Angular Topics / Pending / Current.
        --[_] Technical doc / swebok doc / flow chart.
        --[_] CI / CD.
        --[_] Techblog / linkeding / IEEE standard.
        --[_] Tic Tac Toe online.
        --[_] Sudoku OCR.
        --[_] oAuth.
        --[_] Dynamic Password / chat.
        --[_] Consulta Log Errores.
        --[_] CRUD.
        --[_] Read specs from config file.
        --[_] compile warnings.
        --[_] Sudoku split board -> Generated / Solved.
        --[_] Consolta log de errores.
        --[_] Marketling List -> (former employees / non it companies).
        --[_] Branch Protect.
        --[_] Referencia c++ Regex / Geek for geeks.
        --[_] UIX : PrimeNG, Material, Zorro_ng.
        --[_] Software engigeering topics : SOLID / CLEAN / PATTERNS / PWA.
        --[_] EPPPlus referene. Complete references.
        --[_] Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering).
        --[_] https://vercel.com/apereznwos-projects/~/integrations
        --[_] angular academy.
        --[_] angular certification.
           

/////////////////////////////////////////////